name: Terraform Gitaction

'on':
  push:
    branches:
      - dev
  pull_request: null

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./setup
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

  terraform_init:
    name: Terraform Init
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./setup
    needs: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: '${{ secrets.GCP_SA_KEY }}'

  terraform_plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./setup
    needs: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        env:
          GOOGLE_CREDENTIALS: '${{ secrets.GCP_SA_KEY }}'
  
  terraform_pull_request:
    name: Terraform Pull Request
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./setup
    needs: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: |-
            terraform
            ${{ steps.plan.outputs.stdout }}
        with:
          GOOGLE_CREDENTIALS: '${{ secrets.GCP_SA_KEY }}'
          script: "const output = `#### Terraform Format and Style \U0001F58C\\`${{ steps.fmt.outcome }}\\`\n#### Terraform Initialization \\`${{ steps.init.outcome }}\\`\n#### Terraform Plan \\`${{ steps.plan.outcome }}\\`\n#### Terraform Validation \\`${{ steps.validate.outcome }}\\`\n\n<details><summary>Show Plan</summary>\n\n\\`\\`\\`\\n\n${process.env.PLAN}\n\\`\\`\\`\n\n</details>\n\n*Pusher: @${{ github.actor }}, Action: \\`${{ github.event_name }}\\`*`;\n\ngithub.issues.createComment({\n  issue_number: context.issue.number,\n  owner: context.repo.owner,\n  repo: context.repo.repo,\n  body: output\n})\n"  

  terraform_apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./setup
    needs: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: '${{ secrets.GCP_SA_KEY }}'
      - name: Terraform Apply
        if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
        run: terraform apply -auto-approve
        env:
          GOOGLE_CREDENTIALS: '${{ secrets.GCP_SA_KEY }}'

